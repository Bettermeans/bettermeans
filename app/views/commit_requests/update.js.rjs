logger.info("PARAMS FOR UPDATE #{params.inspect}")
logger.info("@commit_request: #{@commit_request.inspect}")

page.replace_html "commit_request_actions", :partial => "show_link", :locals => {:issue => params['issue_id'], :user => params['user_id'],  :push_allowed => params[:push_allowed]}
page.replace_html "commit_request_side_#{@commit_request.id}", :partial => "commit_requests/show", :locals => {:issue => params['issue_id'], 
                      :current_user => User.current, 
                      :user_id => @commit_request.user_id, 
                      :response => @commit_request.response, 
                      :responder_id => @commit_request.responder_id, 
                      :created_on => @commit_request.created_on, 
                      :updated_on => @commit_request.updated_on,
                      :commit_request => @commit_request.id,
                      :push_allowed => params[:push_allowed],
                      :days => @commit_request.days
                      }
                      
page["commit_request_side_#{@commit_request.id}"].visual_effect :highlight

#If this request resulted in me owning the task
case @commit_request.response
  when 6 #Current user taking this request
  page.replace_html "assigned_to", link_to_user(User.current)
  page.replace_html "issue_status", l(:default_issue_status_assigned)
  page.replace_html "main_gravatar", avatar(User.current, :size => "64")
  page.replace_html "expected_date", format_date(Time.new() + 3600*24*@commit_request.days) unless @commit_request.days < 0
  page["assigned_to"].visual_effect :highlight
  page["expected_date"].visual_effect :highlight  
  when 2 #Accepting for someone else
  logger.info("Accepting for someone else")
  @user = User.find(@commit_request.user_id)
  page.replace_html "assigned_to", link_to_user(@user)
  page.replace_html "issue_status", l(:default_issue_status_assigned)
  page.replace_html "main_gravatar", avatar(@user, :size => "64")
  page.replace_html "expected_date", format_date(Time.new() + 3600*24*@commit_request.days) unless @commit_request.days < 0
  page["assigned_to"].visual_effect :highlight
  page["expected_date"].visual_effect :highlight  
  when 8 #releasing
  @issue = Issue.find(params['issue_id'])
  page.replace_html "assigned_to", "-"
  page.replace_html "issue_status", l(:default_issue_status_new)
  page.replace_html "expected_date", ""
  page.replace_html "main_gravatar", avatar(@issue.author, :size => "64")
end

page.call 'add_lightbox', 'cr_button' #adding hook to create button for lightbox
page.call 'add_lightbox', 'cr_push_button' #adding hook to offer button for lightbox
page.replace "issue_lock_version", hidden_field("issue","lock_version", :value => @lock_version) unless (@lock_version == '')
page.call 'dismiss'

